-*-text-*-

1 libGE-0.26
************

1.1 Introduction
================

libGE is a C++ library that implements the Grammatical Evolution mapping
process. This mapping process, associated with any kind of search
algorithm, translates a string of objects onto a program to be
evaluated.

   Typically, libGE is used by an evolutionary computation algorithm,
providing a mapping from a genotypic structure onto a phenotypic
structure.  On its default implementation, it maps a string provided by
a variable-length genetic algorithm onto a syntactically-correct
program, whose language is specified by a BNF (Backus-Naur Form)
context-free grammar.

   The data structures provided with libGE are higly configurable, so
then can be easily used for different kinds of problems. A set of
mappers is provided, which can be extended to comply with different
demands (e.g. different grammar formats, different mapping processes,
etc).

   There are also several methods provided with libGE, to ease the
integration of the library with most available evolutionary computation
packages. These methods help to translate the data structures native to
those packages into the structures handled by the libGE classes.

1.1.1 Compatibility
-------------------

libGE has been developed under GNU/Linux (Mandrake 10.2, GCC v3.4.3).
The GNU utils autoconf (`http://www.gnu.org/software/autoconf/') and
automake (`http://www.gnu.org/software/automake/') have been used, to
ensure a high level of compatibility with other *nix flavours.

1.1.2 Documentation
-------------------

The documentation provided with libGE was made with the GNU Texinfo
software (`http://www.gnu.org/software/texinfo/'). To render it in PS
or PDF format, simply use `make ps' or `make pdf' after installing
libGE; the resulting documentation file will be in the `doc' directory.

   Please mail any suggestions to Miguel Nicolau
(<Miguel.Nicolau@gmail.com>).

1.2 Installation
================

The libGE library was developped for linux systems, but should work on
most Unix flavours. It comes bundled in a file called
`libGE-xxx.tar.gz', where `xxx' is the latest version (currently 0.26).
You should start by unpackaging this file, using the following command:

   `tar -xvzf libGE-0.26.tar.gz'

   This will create a directory called `libGE-0.26', containing all the
files required to build the library.  Within that directory, the file
`INSTALL' contains generic installation instructions for projects that
use the standard GNU packaging of autoconf and automake. In short,
three steps are required:

   `./configure'

   `make'

   `make install'

   The `configure' script will try to guess certain hardware and
software components of your system, and configure the source code of
libGE accordingly.  Run `./configure --help' for details on the options
and arguments available.  This will show you the standard options
(common to all `configure' scripts), as well as libGE options, such as
the inclusion or otherwise of support for specific search engines.

   Running `make' will build the library, and `make install' will
install the library (typically on `/usr/local', depending on your
system).  You might need superuser permissions to install the library
on a system-wide directory; for a user-specific install, try `make
install prefix=path', where `path' is the path in which you which to
install the library.

1.2.1 Examples
--------------

To configure and compile libGE using all the provided wrappers, and
installing in directory `/home/user/libGE', the sequence of commands to
use should be:

   `./configure'

   `make'

   `make install prefix=/home/user/libGE'

   To configure libGE without the GE_ILLIGALSGA wrapper, on the standard
installation directory (usually `/usr/local'), and having the GALib
headers installed in `/home/user/galib246/ga' and the GALib library in
`/home/user/galib246/libga.a', the commands to use should be:

   `./configure --with-MITGALIBINCLUDES=/home/user/galib246/ga/
--with-MITGALIBLIBS=/home/user/galib246/libga.a
--enable-GE_ILLIGALSGA=no'

   `make'

   `make install'

